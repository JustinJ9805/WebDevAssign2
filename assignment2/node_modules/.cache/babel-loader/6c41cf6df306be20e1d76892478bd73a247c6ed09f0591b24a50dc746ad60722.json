{"ast":null,"code":"var _jsxFileName = \"/Users/justinjohn/Desktop/WebDevAssign2/assignment2/src/App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport React, { useEffect } from 'react';\nimport { useState } from 'react';\nimport ACard from './components/aCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst cardImage = [{\n  \"src\": \"/images/circle.png\"\n}, {\n  \"src\": \"/images/diamond.png\"\n}, {\n  \"src\": \"/images/clubs.png\"\n}, {\n  \"src\": \"/images/triangle.png\"\n}, {\n  \"src\": \"/images/star.png\"\n}, {\n  \"src\": \"/images/spade.png\"\n}];\nfunction App() {\n  _s();\n  const [cards, setCards] = useState([]);\n  const [turns, setTurns] = useState(0);\n  const [choiceOne, setChoiceOne] = useState(null);\n  const [choiceTwo, setChoiceTwo] = useState(null);\n\n  //shuffle the deck\n  const shuffle = () => {\n    const shuffled = [...cardImage, ...cardImage].sort(() => Math.random() - 0.5).map(card => ({\n      ...card,\n      id: Math.random()\n    }));\n    setCards(shuffled);\n    setTurns(0);\n  };\n\n  //console.log(cards, turns)\n  const handleChoice = card => {\n    //console.log(card)\n    choiceOne ? setChoiceTwo(card) : setChoiceOne(card);\n  };\n  useEffect(() => {\n    if (choiceOne.src === choiceTwo.src) {\n      console.log('they match!');\n      resetTurn();\n    }\n  }, [choiceOne, choiceTwo]);\n  const resetTurn = () => {\n    setChoiceOne(null);\n    setChoiceTwo(null);\n    setTurns(prevTurns => prevTurns + 1);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Match the Cards!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: shuffle,\n        children: \"New Game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid\",\n      children: cards.map(card => /*#__PURE__*/_jsxDEV(ACard, {\n        card: card,\n        handleChoice: handleChoice\n      }, card.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"/JnteANCPxCZNpFpO1ZAWIjzFcc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","ACard","jsxDEV","_jsxDEV","cardImage","App","_s","cards","setCards","turns","setTurns","choiceOne","setChoiceOne","choiceTwo","setChoiceTwo","shuffle","shuffled","sort","Math","random","map","card","id","handleChoice","src","console","log","resetTurn","prevTurns","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","className","_c","$RefreshReg$"],"sources":["/Users/justinjohn/Desktop/WebDevAssign2/assignment2/src/App.js"],"sourcesContent":["import './App.css';\nimport React, { useEffect } from 'react';\nimport { useState } from 'react';\nimport ACard from './components/aCard'\n\n\nconst cardImage = [\n  {\"src\" : \"/images/circle.png\"},\n  {\"src\" : \"/images/diamond.png\"},\n  {\"src\" : \"/images/clubs.png\"},\n  {\"src\" : \"/images/triangle.png\"},\n  {\"src\" : \"/images/star.png\"},\n  {\"src\" : \"/images/spade.png\"}\n\n]\n\nfunction App() {\n\n\n  const [cards, setCards] = useState([])\n  const [turns, setTurns] = useState(0)\n\n  const[choiceOne, setChoiceOne] = useState(null)\n  const[choiceTwo, setChoiceTwo] = useState(null)\n  \n  //shuffle the deck\n  const shuffle = () =>{\n    const shuffled = [...cardImage, ...cardImage] \n    .sort(() => Math.random() - 0.5)\n    .map((card) => ({ ...card, id: Math.random() }))\n\n    setCards(shuffled)\n    setTurns(0)\n  }\n\n  //console.log(cards, turns)\n  const handleChoice = (card) => {\n    //console.log(card)\n    choiceOne ? setChoiceTwo(card) : setChoiceOne(card)\n  }\n\n  useEffect(() => {\n    if(choiceOne.src === choiceTwo.src){\n      console.log('they match!')\n      resetTurn();\n    }\n  }, [choiceOne, choiceTwo])\n\n  const resetTurn = () => {\n    setChoiceOne(null)\n    setChoiceTwo(null)\n    setTurns(prevTurns => prevTurns + 1)\n  }\n\n\n\n  return (\n    <div>\n      <div>\n        <h1>Match the Cards!</h1>\n        <button onClick={shuffle}>New Game</button>\n      </div>\n\n      <div className='grid'> \n        {cards.map(card => (\n          <ACard key={card.id} card={card} handleChoice={handleChoice}/>\n        ))}\n      </div>\n    </div>\n    \n\n\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}